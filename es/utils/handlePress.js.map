{"version":3,"sources":["../../src/utils/handlePress.js"],"names":["redirect","action","routes","shouldDispatch","dispatch","onClick","target","isRedirect","fullUrl","history","e","prevented","defaultPrevented","notModified","isModified","shouldGo","preventDefault","button","indexOf","index","saveHistory","location","window","href","undefined","metaKey","altKey","ctrlKey","shiftKey"],"mappings":"AACA,SAASA,QAAT,QAAyB,yBAAzB;AAIA,gBAAe,UACbC,MADa,EAEbC,MAFa,EAGbC,cAHa,EAIbC,QAJa,EAKbC,OALa,EAMbC,MANa,EAObC,UAPa,EAQbC,OARa,EASbC,OATa,EAUbC,CAVa,EAWV;AACH,MAAMC,SAAS,GAAGD,CAAC,CAACE,gBAApB;AACA,MAAMC,WAAW,GAAG,CAACC,UAAU,CAACJ,CAAD,CAA/B;AACA,MAAIK,QAAQ,GAAG,IAAf;;AAEA,MAAIV,OAAJ,EAAa;AACXU,IAAAA,QAAQ,GAAGV,OAAO,CAACK,CAAD,CAAP,KAAe,KAA1B,CADW,CACqB;AACjC;;AAED,MAAI,CAACJ,MAAD,IAAWI,CAAX,IAAgBA,CAAC,CAACM,cAAlB,IAAoCH,WAAxC,EAAqD;AACnDH,IAAAA,CAAC,CAACM,cAAF;AACD;;AAED,MACEf,MAAM,IACNc,QADA,IAEAZ,cAFA,IAGA,CAACG,MAHD,IAIA,CAACK,SAJD,IAKAE,WALA,IAMAH,CAAC,CAACO,MAAF,KAAa,CAPf,EAQE;AACAhB,IAAAA,MAAM,GAAGM,UAAU,GAAGP,QAAQ,CAACC,MAAD,CAAX,GAAsBA,MAAzC;AACA,WAAOG,QAAQ,CAACH,MAAD,CAAf;AACD;;AAED,MAAI,CAACA,MAAD,IAAW,CAACK,MAAZ,IAAsBE,OAAO,CAACU,OAAR,CAAgB,MAAhB,MAA4B,CAAtD,EAAyD;AACvD,QAAIT,OAAO,CAACU,KAAR,KAAkB,CAAtB,EAAyB;AACvBV,MAAAA,OAAO,CAACW,WAAR,CAAoBX,OAAO,CAACY,QAA5B,EAAsC,IAAtC,EADuB,CACqB;AAC7C;;AAEDC,IAAAA,MAAM,CAACD,QAAP,CAAgBE,IAAhB,GAAuBf,OAAvB;AACD;;AACD,SAAOgB,SAAP;AACD,CA7CD;;AA+CA,IAAMV,UAAU,GAAG,SAAbA,UAAa,CAACJ,CAAD;AAAA,SACjB,CAAC,EAAEA,CAAC,CAACe,OAAF,IAAaf,CAAC,CAACgB,MAAf,IAAyBhB,CAAC,CAACiB,OAA3B,IAAsCjB,CAAC,CAACkB,QAA1C,CADgB;AAAA,CAAnB","sourcesContent":["// @flow\nimport { redirect } from '@respond-framework/rudy'\nimport type { Routes, ReceivedAction } from '@respond-framework/rudy'\n\nexport type OnClick = false | ((SyntheticEvent) => ?boolean)\nexport default (\n  action: ?ReceivedAction,\n  routes: Routes,\n  shouldDispatch: boolean,\n  dispatch: Function,\n  onClick?: ?OnClick,\n  target: ?string,\n  isRedirect?: boolean,\n  fullUrl: string,\n  history: Object,\n  e: SyntheticEvent,\n) => {\n  const prevented = e.defaultPrevented\n  const notModified = !isModified(e)\n  let shouldGo = true\n\n  if (onClick) {\n    shouldGo = onClick(e) !== false // onClick can return false to prevent dispatch\n  }\n\n  if (!target && e && e.preventDefault && notModified) {\n    e.preventDefault()\n  }\n\n  if (\n    action &&\n    shouldGo &&\n    shouldDispatch &&\n    !target &&\n    !prevented &&\n    notModified &&\n    e.button === 0\n  ) {\n    action = isRedirect ? redirect(action) : action\n    return dispatch(action)\n  }\n\n  if (!action && !target && fullUrl.indexOf('http') === 0) {\n    if (history.index === 0) {\n      history.saveHistory(history.location, true) // used to patch an edge case, see `history/utils/sessionStorage.js.getIndexAndEntries`\n    }\n\n    window.location.href = fullUrl\n  }\n  return undefined\n}\n\nconst isModified = (e: Object) =>\n  !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n"],"file":"handlePress.js"}