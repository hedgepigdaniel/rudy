{"version":3,"sources":["../../src/utils/nestAction.js"],"names":["isNotFound","action","prevState","fromAction","statusCode","tmp","location","type","basename","params","query","state","hash","entries","index","length","pathname","search","url","key","scene","n","prev","createActionRef","from","kind","resolveKind","load","direction","pop","revertPop","status","blocked","actionOrState","rest","createLocationRef","loc","universal","ready","isLoad","replace"],"mappings":";;;;;;;;;;AACA,SAASA,UAAT,QAA2B,SAA3B;AAGA,gBAAe,UACbC,MADa,EAEbC,SAFa,EAGbC,UAHa,EAIbC,UAJa,EAMV;AAAA,MADHC,GACG,uEADW,EACX;AAAA,MACKC,QADL,GAC8DL,MAD9D,CACKK,QADL;AAAA,MACeC,IADf,GAC8DN,MAD9D,CACeM,IADf;AAAA,MACqBC,QADrB,GAC8DP,MAD9D,CACqBO,QADrB;AAAA,MAC+BC,MAD/B,GAC8DR,MAD9D,CAC+BQ,MAD/B;AAAA,MACuCC,KADvC,GAC8DT,MAD9D,CACuCS,KADvC;AAAA,MAC8CC,KAD9C,GAC8DV,MAD9D,CAC8CU,KAD9C;AAAA,MACqDC,IADrD,GAC8DX,MAD9D,CACqDW,IADrD;AAAA,MAGDC,OAHC,GAYCP,QAZD,CAGDO,OAHC;AAAA,MAIDC,KAJC,GAYCR,QAZD,CAIDQ,KAJC;AAAA,MAKDC,MALC,GAYCT,QAZD,CAKDS,MALC;AAAA,MAMDC,QANC,GAYCV,QAZD,CAMDU,QANC;AAAA,MAODC,MAPC,GAYCX,QAZD,CAODW,MAPC;AAAA,MAQDC,GARC,GAYCZ,QAZD,CAQDY,GARC;AAAA,MASDC,GATC,GAYCb,QAZD,CASDa,GATC;AAAA,MAUDC,KAVC,GAYCd,QAZD,CAUDc,KAVC;AAAA,MAWDC,CAXC,GAYCf,QAZD,CAWDe,CAXC;AAcH,MAAMC,IAAI,GAAGC,eAAe,CAACrB,SAAD,CAA5B;AACA,MAAMsB,IAAI,GAAGD,eAAe,CAACpB,UAAD,CAA5B;AAEA,MAAMsB,IAAI,GAAGC,WAAW,CAACpB,QAAQ,CAACmB,IAAV,EAAgBpB,GAAG,CAACsB,IAApB,EAA0BH,IAA1B,CAAxB;AACA,MAAMI,SAAS,GAAGP,CAAC,KAAK,CAAC,CAAP,GAAW,UAAX,GAAwB,SAA1C;AAEA,MAAMQ,GAAG,GAAG,CAAC,CAACxB,GAAG,CAACyB,SAAlB;AACA,MAAMC,MAAM,GAAGP,IAAI,GAAGpB,UAAU,IAAI,GAAjB,GAAuBJ,UAAU,CAACO,IAAD,CAAV,GAAmB,GAAnB,GAAyB,GAAnE;AAEA,SAAO;AACLA,IAAAA,IAAI,EAAJA,IADK;AAELE,IAAAA,MAAM,EAANA,MAFK;AAGLC,IAAAA,KAAK,EAALA,KAHK;AAILC,IAAAA,KAAK,EAALA,KAJK;AAKLC,IAAAA,IAAI,EAAJA,IALK;AAMLJ,IAAAA,QAAQ,EAARA,QANK;AAOLF,IAAAA,QAAQ,EAAE;AACRmB,MAAAA,IAAI,EAAJA,IADQ;AAERG,MAAAA,SAAS,EAATA,SAFQ;AAGRP,MAAAA,CAAC,EAADA,CAHQ;AAKRH,MAAAA,GAAG,EAAHA,GALQ;AAMRF,MAAAA,QAAQ,EAARA,QANQ;AAORC,MAAAA,MAAM,EAANA,MAPQ;AAQRE,MAAAA,GAAG,EAAHA,GARQ;AASRC,MAAAA,KAAK,EAALA,KATQ;AAWRE,MAAAA,IAAI,EAAJA,IAXQ;AAYRE,MAAAA,IAAI,EAAJA,IAZQ;AAaRQ,MAAAA,OAAO,EAAE,IAbD;AAeRnB,MAAAA,OAAO,EAAPA,OAfQ;AAgBRC,MAAAA,KAAK,EAALA,KAhBQ;AAiBRC,MAAAA,MAAM,EAANA,MAjBQ;AAmBRc,MAAAA,GAAG,EAAHA,GAnBQ;AAoBRE,MAAAA,MAAM,EAANA;AApBQ;AAPL,GAAP;AA8BD,CA3DD;AA6DA,OAAO,IAAMR,eAAe,GAAG,SAAlBA,eAAkB,CAACU,aAAD,EAA2B;AACxD,MAAI,CAACA,aAAL,EAAoB,OAAO,IAAP,CADoC,CAGxD;;AACA,MAAI,CAACA,aAAa,CAAC3B,QAAnB,EAA6B;AAAA,QAEzBC,IAFyB,GASvB0B,aATuB,CAEzB1B,IAFyB;AAAA,QAGzBE,MAHyB,GASvBwB,aATuB,CAGzBxB,MAHyB;AAAA,QAIzBC,KAJyB,GASvBuB,aATuB,CAIzBvB,KAJyB;AAAA,QAKzBC,KALyB,GASvBsB,aATuB,CAKzBtB,KALyB;AAAA,QAMzBC,IANyB,GASvBqB,aATuB,CAMzBrB,IANyB;AAAA,QAOzBJ,QAPyB,GASvByB,aATuB,CAOzBzB,QAPyB;AAAA,QAQtB0B,IARsB,4BASvBD,aATuB;;AAU3B,QAAM3B,QAAQ,GAAG6B,iBAAiB,CAACD,IAAD,CAAlC;AACA,QAAMjC,MAAM,GAAG;AAAEM,MAAAA,IAAI,EAAJA,IAAF;AAAQE,MAAAA,MAAM,EAANA,MAAR;AAAgBC,MAAAA,KAAK,EAALA,KAAhB;AAAuBC,MAAAA,KAAK,EAALA,KAAvB;AAA8BC,MAAAA,IAAI,EAAJA,IAA9B;AAAoCJ,MAAAA,QAAQ,EAARA,QAApC;AAA8CF,MAAAA,QAAQ,EAARA;AAA9C,KAAf;AACA,WAAOL,MAAP;AACD,GAjBuD,CAmBxD;;;AACA,2BACKgC,aADL;AAEE3B,IAAAA,QAAQ,EAAE6B,iBAAiB,mBAAMF,aAAa,CAAC3B,QAApB;AAF7B;AAID,CAxBM;;AA0BP,IAAM6B,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AACjC,SAAOA,GAAG,CAACd,IAAX;AACA,SAAOc,GAAG,CAACZ,IAAX;AACA,SAAOY,GAAG,CAACJ,OAAX;AACA,SAAOI,GAAG,CAACC,SAAX;AAEA,SAAOD,GAAG,CAACrB,MAAX;AACA,SAAOqB,GAAG,CAACX,IAAX;AACA,SAAOW,GAAG,CAACvB,OAAX;AACA,SAAOuB,GAAG,CAACP,GAAX;AACA,SAAOO,GAAG,CAACL,MAAX;AACA,SAAOK,GAAG,CAACR,SAAX;AACA,SAAOQ,GAAG,CAACf,CAAX;AACA,SAAOe,GAAG,CAACC,SAAX;AACA,SAAOD,GAAG,CAACE,KAAX;AAEA,SAAOF,GAAP;AACD,CAjBD;;AAmBA,IAAMV,WAAW,GAAG,SAAdA,WAAc,CAACD,IAAD,EAAOc,MAAP,EAAef,IAAf,EAAwB;AAC1C,MAAIe,MAAJ,EAAY,OAAO,MAAP,CAD8B,CAChB;;AAC1B,MAAI,CAACf,IAAL,EAAW,OAAOC,IAAP,CAF+B,CAEnB;AACvB;AACA;;AACA,SAAOA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,SAArB,CAAP;AACD,CAND","sourcesContent":["// @flow\nimport { isNotFound } from './index'\nimport type { ActionToNavigation, LocationState } from '../flow-types'\n\nexport default (\n  action: ActionToNavigation,\n  prevState: LocationState,\n  fromAction: LocationState,\n  statusCode: number,\n  tmp: Object = {},\n) => {\n  const { location, type, basename, params, query, state, hash } = action\n  const {\n    entries,\n    index,\n    length,\n    pathname,\n    search,\n    url,\n    key,\n    scene,\n    n,\n  } = location\n\n  const prev = createActionRef(prevState)\n  const from = createActionRef(fromAction)\n\n  const kind = resolveKind(location.kind, tmp.load, from)\n  const direction = n === -1 ? 'backward' : 'forward'\n\n  const pop = !!tmp.revertPop\n  const status = from ? statusCode || 302 : isNotFound(type) ? 404 : 200\n\n  return {\n    type,\n    params,\n    query,\n    state,\n    hash,\n    basename,\n    location: {\n      kind,\n      direction,\n      n,\n\n      url,\n      pathname,\n      search,\n      key,\n      scene,\n\n      prev,\n      from,\n      blocked: null,\n\n      entries,\n      index,\n      length,\n\n      pop,\n      status,\n    },\n  }\n}\n\nexport const createActionRef = (actionOrState: Object) => {\n  if (!actionOrState) return null\n\n  // if `prev` or redirect action from outside of pipeline, we receive the state instead (see ./formatAction.js)\n  if (!actionOrState.location) {\n    const {\n      type,\n      params,\n      query,\n      state,\n      hash,\n      basename,\n      ...rest\n    } = actionOrState\n    const location = createLocationRef(rest)\n    const action = { type, params, query, state, hash, basename, location }\n    return action\n  }\n\n  // if redirect occurred during pipeline, we receive an action representing the previous state\n  return {\n    ...actionOrState,\n    location: createLocationRef({ ...actionOrState.location }),\n  }\n}\n\nconst createLocationRef = (loc) => {\n  delete loc.prev\n  delete loc.from\n  delete loc.blocked\n  delete loc.universal\n\n  delete loc.length\n  delete loc.kind\n  delete loc.entries\n  delete loc.pop\n  delete loc.status\n  delete loc.direction\n  delete loc.n\n  delete loc.universal\n  delete loc.ready\n\n  return loc\n}\n\nconst resolveKind = (kind, isLoad, from) => {\n  if (isLoad) return 'load' // insure redirects don't change kind on load\n  if (!from) return kind // PRIMARY USE CASE: preverse the standard kind\n  // pipeline redirects before enter are in fact pushes, but users shouldn't\n  // have to think about that -- using `kind.replace` preserves back/next kinds\n  return kind.replace('push', 'replace')\n}\n"],"file":"nestAction.js"}