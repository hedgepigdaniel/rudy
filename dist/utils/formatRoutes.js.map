{"version":3,"sources":["../../src/utils/formatRoutes.js"],"names":["input","formatter","isAddRoutes","routes","NOT_FOUND","path","Object","assign","ADD_ROUTES","thunk","addRoutes","dispatch","CHANGE_BASENAME","changeBasename","CLEAR_CACHE","clearCache","CONFIRM","confirm","CALL_HISTORY","callHistory","types","keys","forEach","type","route","formatRoute","r"],"mappings":";;;;;;;AACA;;AASA;;eAQe,kBACbA,KADa,EAEbC,SAFa,EAIF;AAAA,MADXC,WACW,uEADY,KACZ;AACX,MAAMC,MAAM,GAAGD,WAAW,GAAGF,KAAH,GAAW,EAArC;;AAEA,MAAI,CAACE,WAAL,EAAkB;AAChBC,IAAAA,MAAM,CAACC,SAAP,GAAmBJ,KAAK,CAACI,SAAN,IAAmB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAtC;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAcJ,MAAd,EAAsBH,KAAtB,EAFgB,CAEa;;AAE7BG,IAAAA,MAAM,CAACK,iBAAD,CAAN,GAAqBR,KAAK,CAACQ,iBAAD,CAAL,IAAqB;AACxCC,MAAAA,KAAK,EAAEC,yBADiC;AAExCC,MAAAA,QAAQ,EAAE;AAF8B,KAA1C;AAIAR,IAAAA,MAAM,CAACS,sBAAD,CAAN,GAA0BZ,KAAK,CAACY,sBAAD,CAAL,IAA0B;AAClDH,MAAAA,KAAK,EAAEI,8BAD2C;AAElDF,MAAAA,QAAQ,EAAE;AAFwC,KAApD;AAIAR,IAAAA,MAAM,CAACW,kBAAD,CAAN,GAAsBd,KAAK,CAACc,kBAAD,CAAL,IAAsB;AAAEL,MAAAA,KAAK,EAAEM;AAAT,KAA5C;AACAZ,IAAAA,MAAM,CAACa,cAAD,CAAN,GAAkBhB,KAAK,CAACgB,cAAD,CAAL,IAAkB;AAAEP,MAAAA,KAAK,EAAEQ,uBAAT;AAAkBN,MAAAA,QAAQ,EAAE;AAA5B,KAApC;AACAR,IAAAA,MAAM,CAACe,mBAAD,CAAN,GAAuBlB,KAAK,CAACkB,mBAAD,CAAL,IAAuB;AAC5CT,MAAAA,KAAK,EAAEU,2BADqC;AAE5CR,MAAAA,QAAQ,EAAE;AAFkC,KAA9C;AAID;;AAED,MAAMS,KAAiB,GAAGd,MAAM,CAACe,IAAP,CAAYlB,MAAZ,CAA1B;AAEAiB,EAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,IAAD,EAAwB;AACpC,QAAMC,KAAa,GAAGC,WAAW,CAC/BtB,MAAM,CAACoB,IAAD,CADyB,EAE/BA,IAF+B,EAG/BpB,MAH+B,EAI/BF,SAJ+B,EAK/BC,WAL+B,CAAjC;AAQAsB,IAAAA,KAAK,CAACD,IAAN,GAAaA,IAAb;AACApB,IAAAA,MAAM,CAACoB,IAAD,CAAN,GAAeC,KAAf;AACD,GAXD;AAaA,SAAOrB,MAAP;AACD,C;;;;AAEM,IAAMsB,WAAW,GAAG,SAAdA,WAAc,CACzBC,CADyB,EAEzBH,IAFyB,EAGzBpB,MAHyB,EAIzBF,SAJyB,EAMV;AAAA,MADfC,WACe,uEADQ,KACR;AACf,MAAMsB,KAAK,GAAG,OAAOE,CAAP,KAAa,QAAb,GAAwB;AAAErB,IAAAA,IAAI,EAAEqB;AAAR,GAAxB,GAAsCA,CAApD;;AAEA,MAAIzB,SAAJ,EAAe;AACb,WAAOA,SAAS,CAACuB,KAAD,EAAQD,IAAR,EAAcpB,MAAd,EAAsBD,WAAtB,CAAhB;AACD;;AAED,MAAI,OAAOsB,KAAP,KAAiB,UAArB,EAAiC;AAC/B,WAAO;AAAEf,MAAAA,KAAK,EAAEe;AAAT,KAAP;AACD;;AAED,SAAOA,KAAP;AACD,CAlBM","sourcesContent":["// @flow\nimport {\n  ADD_ROUTES,\n  CHANGE_BASENAME,\n  CLEAR_CACHE,\n  CONFIRM,\n  CALL_HISTORY,\n} from '../types'\nimport type { Routes, RoutesInput, RouteInput, RouteNames } from '../flow-types'\n\nimport {\n  addRoutes,\n  changeBasename,\n  clearCache,\n  confirm,\n  callHistory,\n} from '../pathlessRoutes'\n\nexport default (\n  input: RoutesInput,\n  formatter: ?Function,\n  isAddRoutes: boolean = false,\n): Routes => {\n  const routes = isAddRoutes ? input : {}\n\n  if (!isAddRoutes) {\n    routes.NOT_FOUND = input.NOT_FOUND || { path: '/not-found' }\n    Object.assign(routes, input) // insure '/not-found' matches over '/:param?' -- yes, browsers respect order assigned for non-numeric keys\n\n    routes[ADD_ROUTES] = input[ADD_ROUTES] || {\n      thunk: addRoutes,\n      dispatch: false,\n    }\n    routes[CHANGE_BASENAME] = input[CHANGE_BASENAME] || {\n      thunk: changeBasename,\n      dispatch: false,\n    }\n    routes[CLEAR_CACHE] = input[CLEAR_CACHE] || { thunk: clearCache }\n    routes[CONFIRM] = input[CONFIRM] || { thunk: confirm, dispatch: false }\n    routes[CALL_HISTORY] = input[CALL_HISTORY] || {\n      thunk: callHistory,\n      dispatch: false,\n    }\n  }\n\n  const types: RouteNames = Object.keys(routes)\n\n  types.forEach((type: string): void => {\n    const route: Object = formatRoute(\n      routes[type],\n      type,\n      routes,\n      formatter,\n      isAddRoutes,\n    )\n\n    route.type = type\n    routes[type] = route\n  })\n\n  return routes\n}\n\nexport const formatRoute = (\n  r: RouteInput,\n  type: string,\n  routes: Routes,\n  formatter: ?Function,\n  isAddRoutes: boolean = false,\n): RouteInput => {\n  const route = typeof r === 'string' ? { path: r } : r\n\n  if (formatter) {\n    return formatter(route, type, routes, isAddRoutes)\n  }\n\n  if (typeof route === 'function') {\n    return { thunk: route }\n  }\n\n  return route\n}\n"],"file":"formatRoutes.js"}