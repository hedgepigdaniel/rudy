{"version":3,"sources":["../../src/utils/callRoute.js"],"names":["routes","action","key","type","route","args"],"mappings":";;;;;;;;;eAGe,kBAACA,MAAD;AAAA,SAAoB,UACjCC,MADiC,EAEjCC,GAFiC,EAI9B;AACH,QAAMC,IAAY,GAAG,OAAOF,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACE,IAAlE;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAACG,IAAD,CAApB;AACA,QAAI,CAACC,KAAL,EAAY,OAAO,IAAP;AAEZ,QAAI,CAACF,GAAL,EAAU,OAAOE,KAAP;AACV,QAAI,OAAOA,KAAK,CAACF,GAAD,CAAZ,KAAsB,UAA1B,EAAsC,OAAOE,KAAK,CAACF,GAAD,CAAZ;AAEtCD,IAAAA,MAAM,GAAG,QAAOA,MAAP,MAAkB,QAAlB,GAA6BA,MAA7B,GAAsC;AAAEE,MAAAA,IAAI,EAAJA;AAAF,KAA/C;;AARG,sCADAE,IACA;AADAA,MAAAA,IACA;AAAA;;AASH,WAAOD,KAAK,CAACF,GAAD,CAAL,OAAAE,KAAK,GAAMH,MAAN,SAAiBI,IAAjB,EAAZ;AACD,GAdc;AAAA,C,EAgBf;AACA","sourcesContent":["// @flow\nimport type { Action, Routes } from '../flow-types'\n\nexport default (routes: Routes) => (\n  action: Action | string | Object,\n  key?: string,\n  ...args: Array<any>\n) => {\n  const type: string = typeof action === 'string' ? action : action.type\n  const route = routes[type]\n  if (!route) return null\n\n  if (!key) return route\n  if (typeof route[key] !== 'function') return route[key]\n\n  action = typeof action === 'object' ? action : { type }\n  return route[key](action, ...args)\n}\n\n// usage:\n// callRoute(routes)(action, key, ...args)\n"],"file":"callRoute.js"}