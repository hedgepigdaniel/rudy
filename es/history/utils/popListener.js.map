{"version":3,"sources":["../../../src/history/utils/popListener.js"],"names":["addPopListener","onPop","onHash","useHash","supportsPopStateOnHashChange","addEventListener","window","removePopListener","removeEventListener","node","event","listener","attachEvent","detachEvent","navigator","userAgent","indexOf","isExtraneousPopEvent","state","undefined"],"mappings":"AACA;AACA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAkBC,MAAlB,EAAuC;AACnE,MAAMC,OAAO,GAAG,CAACC,4BAA4B,EAA7C;AAEAC,EAAAA,gBAAgB,CAACC,MAAD,EAAS,UAAT,EAAqBL,KAArB,CAAhB;AACA,MAAIE,OAAJ,EAAaE,gBAAgB,CAACC,MAAD,EAAS,YAAT,EAAuBJ,MAAvB,CAAhB;AACd,CALM;AAOP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,KAAD,EAAkBC,MAAlB,EAAuC;AACtE,MAAMC,OAAO,GAAG,CAACC,4BAA4B,EAA7C;AAEAI,EAAAA,mBAAmB,CAACF,MAAD,EAAS,UAAT,EAAqBL,KAArB,CAAnB;AACA,MAAIE,OAAJ,EAAaK,mBAAmB,CAACF,MAAD,EAAS,YAAT,EAAuBJ,MAAvB,CAAnB;AACd,CALM;;AAOP,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACI,IAAD,EAAOC,KAAP,EAAcC,QAAd;AAAA,SACvBF,IAAI,CAACJ,gBAAL,GACII,IAAI,CAACJ,gBAAL,CAAsBK,KAAtB,EAA6BC,QAA7B,EAAuC,KAAvC,CADJ,GAEIF,IAAI,CAACG,WAAL,aAAsBF,KAAtB,GAA+BC,QAA/B,CAHmB;AAAA,CAAzB;;AAKA,IAAMH,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd;AAAA,SAC1BF,IAAI,CAACD,mBAAL,GACIC,IAAI,CAACD,mBAAL,CAAyBE,KAAzB,EAAgCC,QAAhC,EAA0C,KAA1C,CADJ,GAEIF,IAAI,CAACI,WAAL,aAAsBH,KAAtB,GAA+BC,QAA/B,CAHsB;AAAA,CAA5B,C,CAKA;;;AACA,IAAMP,4BAA4B,GAAG,SAA/BA,4BAA+B;AAAA,SACnCE,MAAM,CAACQ,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CADhB;AAAA,CAArC;AAGA;;;;;;;AAKA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,KAAD;AAAA,SAClCA,KAAK,CAACQ,KAAN,KAAgBC,SAAhB,IAA6BL,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4B,OAA5B,MAAyC,CAAC,CADrC;AAAA,CAA7B","sourcesContent":["// @flow\n/* eslint-env browser */\nexport const addPopListener = (onPop: Function, onHash: Function) => {\n  const useHash = !supportsPopStateOnHashChange()\n\n  addEventListener(window, 'popstate', onPop)\n  if (useHash) addEventListener(window, 'hashchange', onHash)\n}\n\nexport const removePopListener = (onPop: Function, onHash: Function) => {\n  const useHash = !supportsPopStateOnHashChange()\n\n  removeEventListener(window, 'popstate', onPop)\n  if (useHash) removeEventListener(window, 'hashchange', onHash)\n}\n\nconst addEventListener = (node, event, listener) =>\n  node.addEventListener\n    ? node.addEventListener(event, listener, false)\n    : node.attachEvent(`on${event}`, listener)\n\nconst removeEventListener = (node, event, listener) =>\n  node.removeEventListener\n    ? node.removeEventListener(event, listener, false)\n    : node.detachEvent(`on${event}`, listener)\n\n// Returns true if browser fires popstate on hash change. IE10 and IE11 do not.\nconst supportsPopStateOnHashChange = () =>\n  window.navigator.userAgent.indexOf('Trident') === -1\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nexport const isExtraneousPopEvent = (event: Object) =>\n  event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1\n"],"file":"popListener.js"}