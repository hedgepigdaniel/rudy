{"version":3,"sources":["../src/link.jsx"],"names":["LinkInner","props","to","redirect","component","Component","children","onPress","onClick","down","shouldDispatch","target","dispatch","bn","basename","cp","currentPathname","api","routesAdded","u","url","isActive","partial","strict","query","hash","activeStyle","activeClassName","ariaCurrent","p","routes","getLocation","options","history","curr","pathname","fullUrl","action","hasHref","handler","handlePress","bind","preventDefault","undefined","navLinkProps","toFullUrl","q","h","style","className","matchers","path","opts","route","type","match","Object","assign","active","trim","mapState","state","isNav","charAt","connector","LinkConnected","Link","NavLink"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-disable react/prop-types,react/jsx-props-no-spreading */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport type { Connector } from 'react-redux'\n\nimport { matchUrl, urlToLocation } from '@respond-framework/rudy'\nimport type { ReceivedAction } from '@respond-framework/rudy'\n\nimport { toUrlAndAction, handlePress, preventDefault } from './utils'\nimport { RudyConsumer } from './provider'\nimport type { To, OnClick } from './utils'\n\ntype OwnProps = {\n  to: To,\n  redirect?: boolean,\n  children?: any,\n  onPress?: OnClick,\n  onClick?: OnClick,\n  down?: boolean,\n  shouldDispatch?: boolean,\n  target?: string,\n  style?: Object,\n  className?: string,\n  activeStyle?: Object,\n  activeClassName?: string,\n  ariaCurrent?: string,\n  partial?: boolean,\n  strict?: boolean,\n  query?: boolean,\n  hash?: boolean,\n  isActive?: (?Object, Object) => boolean,\n  component?: string | React.ComponentType<any>,\n  api: Object,\n}\n\ntype Props = {\n  dispatch: Function,\n  basename: string,\n  routesAdded?: number,\n  url?: string,\n  currentPathname?: string,\n} & OwnProps\n\nconst LinkInner = (props) => {\n  const {\n    to,\n    redirect,\n    component: Component = 'a',\n    children,\n    onPress,\n    onClick,\n    down = false,\n    shouldDispatch = true,\n    target,\n    dispatch,\n    basename: bn,\n    currentPathname: cp, // used only for relative URLs\n    api,\n    routesAdded,\n\n    url: u,\n    isActive,\n    partial,\n    strict,\n    query,\n    hash,\n    activeStyle,\n    activeClassName,\n    ariaCurrent,\n\n    ...p\n  } = props\n\n  const { routes, getLocation, options, history } = api\n  const curr = cp || getLocation().pathname // for relative paths and incorrect actions (incorrect actions don't waste re-renderings and just get current pathname from context)\n  const { fullUrl, action } = toUrlAndAction(to, routes, bn, curr, options)\n  const hasHref = Component === 'a' || typeof Component !== 'string'\n\n  const handler = handlePress.bind(\n    null,\n    action,\n    api.routes,\n    shouldDispatch,\n    dispatch,\n    onPress || onClick,\n    target,\n    redirect,\n    fullUrl,\n    history,\n  )\n\n  return (\n    <Component\n      onClick={(!down && handler) || preventDefault}\n      href={hasHref ? fullUrl : undefined}\n      onMouseDown={down ? handler : undefined}\n      onTouchStart={down ? handler : undefined}\n      target={target}\n      {...p}\n      {...navLinkProps(props, fullUrl, action)}\n    >\n      {children}\n    </Component>\n  )\n}\n\nconst navLinkProps = (\n  props: Props,\n  toFullUrl: string,\n  action: ?ReceivedAction,\n) => {\n  if (!props.url) return undefined\n\n  const {\n    url,\n    isActive,\n    partial,\n    strict,\n    query: q,\n    hash: h,\n\n    style,\n    className,\n    activeStyle,\n    activeClassName = '',\n    ariaCurrent = 'true',\n\n    api,\n  } = props\n\n  const { getLocation, options, routes } = api\n  const { pathname, query, hash } = urlToLocation(toFullUrl)\n  const matchers = { path: pathname, query: q && query, hash: h && hash }\n  const opts = { partial, strict }\n  const route = routes[action.type] || {}\n  const match = matchUrl(url, matchers, opts, route, options)\n\n  if (match) {\n    Object.assign(match, action)\n  }\n\n  const active = !!(isActive ? isActive(match, getLocation()) : match)\n\n  return {\n    style: active ? { ...style, ...activeStyle } : style,\n    className: `${className || ''} ${active ? activeClassName : ''}`.trim(),\n    'aria-current': active && ariaCurrent,\n  }\n}\n\nconst mapState = (state: Object, { api, ...props }: OwnProps) => {\n  const { url, pathname, basename: bn, routesAdded } = api.getLocation()\n  const isNav = props.activeClassName || props.activeStyle // only NavLinks re-render when the URL changes\n\n  // We are very precise about what we want to cause re-renderings, as perf is\n  // important! So only pass currentPathname if the user will in fact be making\n  // use of it for relative paths.\n  let currentPathname\n\n  if (typeof props.to === 'string' && props.to.charAt(0) !== '/') {\n    currentPathname = pathname\n  }\n\n  const basename = bn ? `/${bn}` : ''\n\n  return {\n    api,\n    basename,\n    routesAdded,\n    url: isNav && url,\n    currentPathname,\n  }\n}\n\nconst connector: Connector<OwnProps, Props> = connect(mapState)\n\nconst LinkConnected = connector(LinkInner)\n\nexport const Link = (props) => (\n  <RudyConsumer>{(api) => <LinkConnected api={api} {...props} />}</RudyConsumer>\n)\n\nexport const NavLink = ({ activeClassName = 'active', ...props }: Object) => (\n  <Link activeClassName={activeClassName} {...props} />\n)\n"],"file":"link.js"}