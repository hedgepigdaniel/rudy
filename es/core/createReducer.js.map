{"version":3,"sources":["../../src/core/createReducer.js"],"names":["ADD_ROUTES","BLOCK","UNBLOCK","SET_FROM","typeToScene","isNotFound","isServer","initialState","routes","st","action","r","type","l","location","kind","commit","act","path","url","test","params","query","state","hash","basename","universal","s","ready","routesAdded","payload","ref","from","blocked","indexOf","error","errorType","createInitialState","entries","index","length","pathname","search","key","scene","n","direction","prev","createPrev","status","pop","i","prevAction","createPrevEmpty"],"mappings":"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","sourcesContent":["// @flow\nimport { ADD_ROUTES, BLOCK, UNBLOCK, SET_FROM } from '../types'\nimport { typeToScene, isNotFound } from '../utils'\nimport { isServer } from '@respond-framework/utils'\n\nimport type {\n  LocationState,\n  Routes,\n  Action,\n  CreateReducerAction,\n  Prev,\n} from '../flow-types'\n\nexport default (initialState: Object, routes: Routes) => (\n  st: LocationState = initialState,\n  action: CreateReducerAction,\n): LocationState => {\n  const r = routes[action.type]\n  const l = action.location\n  if (l && l.kind === 'set') {\n    const {\n      commit,\n      location: { kind, ...location },\n      ...act\n    } = action\n    return { ...st, ...act, ...location }\n  }\n\n  if (r && r.path && (l.url !== st.url || /load|reset/.test(l.kind))) {\n    const { type, params, query, state, hash, basename } = action\n    const { universal } = st\n    const s = { type, params, query, state, hash, basename, universal, ...l }\n    if (st.ready === false) s.ready = true\n    return s\n  }\n\n  if (action.type === ADD_ROUTES) {\n    const { routesAdded } = action.payload\n    return { ...st, routesAdded }\n  }\n\n  if (action.type === SET_FROM) {\n    const { ref } = action.payload\n    return { ...st, from: ref }\n  }\n\n  if (action.type === BLOCK) {\n    const { ref } = action.payload\n    return { ...st, blocked: ref }\n  }\n\n  if (action.type === UNBLOCK) {\n    return { ...st, blocked: null }\n  }\n\n  if (action.type.indexOf('_ERROR') > -1) {\n    const { error, type: errorType } = action\n    return { ...st, error, errorType }\n  }\n\n  if (action.type.indexOf('_COMPLETE') > -1) {\n    return { ...st, ready: true }\n  }\n\n  if (action.type.indexOf('_START') > -1) {\n    return { ...st, ready: false }\n  }\n\n  return st\n}\n\nexport const createInitialState = (action: Action): LocationState => {\n  const { location, type, basename, params, query, state, hash } = action\n  const {\n    entries,\n    index,\n    length,\n    pathname,\n    search,\n    url,\n    key,\n    scene,\n    n,\n  } = location\n\n  const direction = n === -1 ? 'backward' : 'forward'\n  const prev = createPrev(location)\n  const universal = isServer()\n  const status = isNotFound(type) ? 404 : 200\n\n  return {\n    kind: 'init',\n    direction,\n    n,\n\n    type,\n    params,\n    query,\n    state,\n    hash,\n    basename,\n\n    url,\n    pathname,\n    search,\n    key,\n    scene,\n\n    prev,\n    from: null,\n    blocked: null,\n\n    entries,\n    index,\n    length,\n\n    universal,\n    pop: false,\n    status,\n  }\n}\n\nexport const createPrev = (location: {\n  n: number,\n  index: number,\n  entries: Array<{ pathname: string, location: Object }>,\n}) => {\n  const { n, index: i, entries } = location // needs to use real lastIndex instead of -1\n  const index = i + n * -1 // the entry action we want is the opposite of the direction the user is going\n  const prevAction = entries[index]\n\n  if (!prevAction) return createPrevEmpty()\n\n  return {\n    ...prevAction,\n    location: {\n      ...prevAction.location,\n      index,\n    },\n  }\n}\n\nexport const createPrevEmpty = (): Prev => ({\n  type: '',\n  params: {},\n  query: {},\n  state: {},\n  hash: '',\n  basename: '',\n  location: {\n    url: '',\n    pathname: '',\n    search: '',\n    key: '',\n    scene: '',\n    index: -1,\n  },\n})\n"],"file":"createReducer.js"}