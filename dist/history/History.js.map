{"version":3,"sources":["../../src/history/History.js"],"names":["History","routes","options","basenames","map","bn","kind","_restore","n","index","entries","action","info","commit","firstAction","_notify","dispatch","getLocation","unlisten","notify","extras","n2","length","_once","location","path","state","_pushToFront","awaitUrl","url","_push","slice","currUrl","_replace","delta","byIndex","revertPop","_resolveDelta","isMovingAdjacently","isPop","Error","currentEntry","prev","_createPrev","oldUrl","_jump","jump","act","i","basename","query","params","hash","entry","_set","prevUrl","newInfo","ents","_findResetFirstAction","unshift","undefined","oldFirstUrl","reverseN","_reset","from","scene","type","resetFirstEntry","homeType","Object","keys","find","Array","isArray","notFoundPath","NOT_FOUND","homeRoute","committed","Promise","resolve","then","save","prevEntries","isBehindHead","entriesToDelete","splice","push","findIndex","e","key"],"mappings":"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","sourcesContent":["import {\n  toAction,\n  toEntries,\n  createActionRef,\n  cleanBasename,\n  isAction,\n} from '../utils'\nimport { createPrevEmpty } from '../core/createReducer'\n\nexport default class History {\n  constructor(routes, options = {}) {\n    this.routes = routes\n    this.options = options\n\n    options.basenames = (options.basenames || []).map((bn) => cleanBasename(bn))\n\n    const kind = 'load'\n    const { n, index, entries } = this._restore() // delegate to child classes to restore\n    const action = entries[index]\n    const info = { kind, n, index, entries }\n    const commit = function() {} // action already committed, by virtue of browser loading the URL\n\n    this.firstAction = this._notify(action, info, commit, false)\n  }\n\n  // CORE:\n\n  listen(dispatch, getLocation) {\n    this.dispatch = dispatch\n    this.getLocation = getLocation\n    return () => this.unlisten()\n  }\n\n  unlisten() {\n    this.dispatch = null\n  }\n\n  _notify(action, info, commit, notify = true, extras) {\n    const { index, entries, n } = info\n    const n2 =\n      n || (index > this.index ? 1 : index === this.index ? this.n : -1)\n    const { length } = entries\n\n    action = {\n      ...action,\n      ...extras,\n      commit: this._once(commit),\n      location: { ...action.location, ...info, length, n: n2 },\n    }\n\n    if (notify && this.dispatch) return this.dispatch(action)\n    return action\n  }\n\n  // LOCATION STATE GETTERS (single source of truth, unidirectional):\n\n  get location() {\n    return this.getLocation()\n  }\n\n  get entries() {\n    return this.location.entries\n  }\n\n  get index() {\n    return this.location.index\n  }\n\n  get url() {\n    return this.location.url\n  }\n\n  get n() {\n    return this.location.n\n  }\n\n  get prevUrl() {\n    return this.location.prev.location.url\n  }\n\n  // API:\n\n  push(path, state = path.state || {}, notify = true) {\n    const action = toAction(this, path, state)\n\n    const kind = 'push'\n    const index = this.index + 1\n    const entries = this._pushToFront(action, this.entries, index, kind)\n    const info = { kind, index, entries }\n    const awaitUrl = this.url\n    const commit = (action) => this._push(action, awaitUrl)\n\n    return this._notify(action, info, commit, notify)\n  }\n\n  replace(path, state = path.state || {}, notify = true) {\n    const action = toAction(this, path, state)\n\n    const kind = 'replace'\n    const { index } = this\n    const entries = this.entries.slice(0)\n    const info = { kind, entries, index }\n    const currUrl = this.url\n    const commit = (action) => this._replace(action, currUrl)\n\n    entries[index] = action\n\n    return this._notify(action, info, commit, notify)\n  }\n\n  jump(delta, byIndex = false, n, notify = true, revertPop) {\n    delta = this._resolveDelta(delta, byIndex)\n    n = n || (delta < 0 ? -1 : 1) // users can choose what direction to make the `jump` look like it came from\n\n    const kind = delta === -1 ? 'back' : delta === 1 ? 'next' : 'jump' // back/next kinds are just more specifically named jumps\n    const isMovingAdjacently = kind !== 'jump'\n    const isPop = !!revertPop // passed by BrowserHistory's `handlePop`\n    const index = this.index + delta\n    const entries = this.entries.slice(0)\n\n    if (!this.entries[index]) {\n      throw new Error(`[rudy] jump() - no entry at index: ${index}.`)\n    }\n\n    const action = entries[index]\n    const info = { kind, index, entries, n }\n\n    const currentEntry = isMovingAdjacently && this.entries[this.index] // for `replace` to adjacent entries we need to override `prev` to be the current entry; `push` doesn't have this issue, but their `prev` value is the same\n    const prev = this._createPrev(info, currentEntry) // jumps can fake the value of `prev` state\n\n    const currUrl = this.url\n    const oldUrl = this.entries[index].location.url\n    const commit = (action) => this._jump(action, currUrl, oldUrl, delta, isPop)\n\n    return this._notify(action, info, commit, notify, { prev, revertPop })\n  }\n\n  back(notify = true) {\n    return this.jump(-1, false, -1, notify)\n  }\n\n  next(notify = true) {\n    return this.jump(1, false, 1, notify)\n  }\n\n  set(act, delta, byIndex = false, notify = true) {\n    delta = this._resolveDelta(delta, byIndex)\n\n    const kind = 'set'\n    const { index } = this\n    const i = this.index + delta\n    const entries = this.entries.slice(0)\n\n    if (!this.entries[i]) {\n      throw new Error(`[rudy] set() - no entry at index: ${i}`)\n    }\n\n    entries[i] = toAction(this, {\n      ...entries[i],\n      ...{\n        basename: act.basename,\n        query: act.query,\n        params: act.params,\n        hash: act.hash,\n        state: act.state,\n      },\n    })\n    const entry = entries[i]\n    const action = delta === 0 ? entry : createActionRef(this.location) // action dispatched must ALWAYS be current one, but insure it receives changes if delta === 0, not just entry in entries\n    const info = { kind, index, entries }\n\n    const oldUrl = delta === 0 ? this.url : this.entries[i].location.url // this must be the current URL for the target so that `BrowserHistory` url awaiting works, as the target's URL may change in `this._transformEntry`\n    const commit = (action) => this._set(action, oldUrl, delta)\n\n    if (i === this.location.prev.location.index) {\n      action.prev = { ...entry, location: { ...entry.location, index: i } } // edge case: insure `state.prev` matches changed entry IF CHANGED ENTRY HAPPENS TO ALSO BE THE PREV\n    }\n\n    return this._notify(action, info, commit, notify)\n  }\n\n  replacePop(path, state = {}, notify = true, info) {\n    const action = toAction(this, path, state)\n    const { index, prevUrl, n } = info\n    const entries = info.entries.slice(0)\n    const kind = index < this.index ? 'back' : 'next'\n    const newInfo = { kind, entries, index }\n\n    const commit = (action) => this._replace(action, prevUrl, n)\n\n    entries[index] = action\n\n    return this._notify(action, newInfo, commit, notify)\n  }\n\n  reset(ents, i, n, notify = true) {\n    if (ents.length === 1) {\n      const entry = this._findResetFirstAction(ents[0]) // browser must always have at least 2 entries, so one can be pushed, erasing old entries from the stack\n      ents.unshift(entry)\n    }\n\n    i = i !== undefined ? i : ents.length - 1\n\n    n =\n      n ||\n      (i !== ents.length - 1\n        ? i > this.index\n          ? 1\n          : i === this.index\n          ? this.n\n          : -1 // create direction relative to index of current entries\n        : 1) // at the front of the array, always use \"forward\" direction\n\n    const kind = 'reset'\n    const { index, entries } = toEntries(this, ents, i, n)\n    const action = { ...entries[index] }\n    const info = { kind, index, entries, n }\n    const oldUrl = this.url\n    const oldFirstUrl = this.entries[0].location.url\n    const reverseN = -this.index\n    const commit = (action) =>\n      this._reset(action, oldUrl, oldFirstUrl, reverseN)\n\n    if (!entries[index]) throw new Error(`[rudy] no entry at index: ${index}.`)\n\n    const prev = this._createPrev(info)\n    const from = index === this.index && createActionRef(this.location) // if index stays the same, treat as \"replace\"\n\n    return this._notify(action, info, commit, notify, { prev, from })\n  }\n\n  canJump(delta, byIndex) {\n    delta = this._resolveDelta(delta, byIndex)\n    return !!this.entries[this.index + delta]\n  }\n\n  // UTILS:\n\n  _createPrev({ n, index: i, entries }, currentEntry) {\n    const index = i - n // reverse of n direction to get prev\n    const entry = currentEntry || entries[index]\n\n    if (!entry) return createPrevEmpty()\n\n    const scene = this.routes[entry.type].scene || ''\n    const action = { ...entry, location: { ...entry.location, index, scene } }\n\n    return createActionRef(action) // build the action for that entry, and create what the resulting state shape would have looked like\n  }\n\n  _findResetFirstAction(entry) {\n    const { routes, options } = this\n\n    // the user can configure what the default first entry is\n    if (options.resetFirstEntry) {\n      return typeof options.resetFirstEntry === 'function'\n        ? options.resetFirstEntry(entry)\n        : options.resetFirstEntry\n    }\n\n    // if not, we have little choice but to put a HOME or NOT_FOUND action at the front of the entries\n    if (typeof entry === 'object' && entry.type) {\n      const action = entry\n\n      if (routes[action.type].path !== '/') {\n        const homeType = Object.keys(routes).find(\n          (type) => routes[type].path === '/',\n        )\n        return homeType ? { type: homeType } : { type: 'NOT_FOUND' }\n      }\n\n      return { type: 'NOT_FOUND' }\n    }\n\n    // entries may also be supplied as paths or arrays also containing state, eg:  [[path, state], [path, state]]\n    const path = Array.isArray(entry) ? entry[0] : entry\n    const notFoundPath = routes.NOT_FOUND.path\n\n    if (path !== '/') {\n      const homeRoute = Object.keys(routes).find(\n        (type) => routes[type].path === '/',\n      )\n      return homeRoute ? '/' : notFoundPath\n    }\n\n    return notFoundPath\n  }\n\n  _once(commit) {\n    let committed = false\n\n    return (action) => {\n      if (committed) return Promise.resolve()\n      committed = true\n\n      return Promise.resolve(commit(action)).then(() => {\n        if (!this.options.save) return\n        this.options.save(this.location) // will retreive these from redux state, which ALWAYS updates first\n      })\n    }\n  }\n\n  _pushToFront(action, prevEntries, index) {\n    const entries = prevEntries.slice(0)\n    const isBehindHead = entries.length > index\n\n    if (isBehindHead) {\n      const entriesToDelete = entries.length - index\n      entries.splice(index, entriesToDelete, action)\n    } else {\n      entries.push(action)\n    }\n\n    return entries\n  }\n\n  _resolveDelta(delta, byIndex) {\n    if (typeof delta === 'string') {\n      const index = this.entries.findIndex((e) => e.location.key === delta)\n      return index - this.index\n    }\n\n    if (byIndex) {\n      return delta - this.index\n    }\n\n    return delta || 0\n  }\n\n  // All child classes *should* implement this:\n  _restore() {\n    return toEntries(this) // by default creates action array for a single entry: ['/']\n  }\n\n  // BrowseHistory (or 3rd party implementations) override these to provide sideFX\n  _push() {}\n\n  _replace() {}\n\n  _jump() {}\n\n  _set() {}\n\n  _reset() {}\n}\n"],"file":"History.js"}