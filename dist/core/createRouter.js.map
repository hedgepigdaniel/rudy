{"version":3,"sources":["../../src/core/createRouter.js"],"names":["routesInput","options","middlewares","location","title","formatRoute","createHistory","createSmartHistory","createReducer","createLocationReducer","createInitialState","createState","onErr","onError","createRestoreScroll","shouldTransition","createRequest","compose","defaultOnError","parseSearch","stringifyQuery","qs","stringify","routes","selectLocationState","history","firstAction","initialState","reducer","wares","register","name","val","has","ctx","busy","api","scrollRestorer","undefined","serverRedirect","anonymousThunk","transformAction","prev","runOnServer","saveScroll","enter","runOnHydrate","cache","restoreScroll","nextPromise","middleware","dispatch","getState","getLocation","s","Object","assign","listen","action","tmp","canceled","Promise","resolve","req","mw","route","next","path","catch","error","wallabyErrors","errorType","type","then","res","clientLoadBusy","isRoutePipeline","firstRoute","resolveOnEnter","resolveFirstRouteOnEnter"],"mappings":"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","sourcesContent":["// @flow\nimport qs from 'qs'\nimport { createSelector, isServer } from '@respond-framework/utils'\nimport defaultCreateRestoreScroll from '@respond-framework/scroll-restorer'\nimport type {\n  Options,\n  Store,\n  Dispatch,\n  RoutesInput,\n  RequestAPI,\n} from '../flow-types'\nimport {\n  compose,\n  createHistory,\n  createReducer,\n  createInitialState,\n  createRequest,\n} from './index'\n\nimport {\n  formatRoutes,\n  shouldTransition,\n  parseSearch,\n  onError as defaultOnError,\n} from '../utils'\n\nimport {\n  serverRedirect,\n  pathlessRoute,\n  anonymousThunk,\n  transformAction,\n  call,\n  enter,\n  changePageTitle,\n  saveScroll,\n  restoreScroll,\n} from '../middleware'\n\nexport default (\n  routesInput: RoutesInput = {},\n  options: Options = {},\n  middlewares: Array<Function>,\n) => {\n  const {\n    location,\n    title,\n    formatRoute,\n    createHistory: createSmartHistory = createHistory,\n    createReducer: createLocationReducer = createReducer,\n    createInitialState: createState = createInitialState,\n    onError: onErr,\n    createRestoreScroll: createRestoreScroll = defaultCreateRestoreScroll(),\n  } = options\n\n  // assign to options so middleware can override them in 1st pass if necessary\n  options.shouldTransition = options.shouldTransition || shouldTransition\n  options.createRequest = options.createRequest || createRequest\n  options.compose = options.compose || compose\n  options.onError = typeof onErr !== 'undefined' ? onErr : defaultOnError\n  options.parseSearch = options.parseSearch || parseSearch\n  options.stringifyQuery = options.stringifyQuery || qs.stringify\n\n  const routes = formatRoutes(routesInput, formatRoute)\n  const selectLocationState = createSelector(\n    'location',\n    location,\n  )\n  const history = createSmartHistory(routes, options)\n  const { firstAction } = history\n  const initialState = createState(firstAction)\n  const reducer = createLocationReducer(initialState, routes)\n  const wares = {}\n  const register = (name: string, val?: any = true) => (wares[name] = val)\n  const has = (name: string) => wares[name]\n  const ctx = { busy: false }\n  const api = { routes, history, options, register, has, ctx }\n\n  const scrollRestorer = isServer() ? undefined : createRestoreScroll(api)\n  api.scrollRestorer = scrollRestorer\n\n  if (!middlewares) {\n    middlewares = [\n      serverRedirect, // short-circuiting middleware\n      anonymousThunk,\n      pathlessRoute('thunk'),\n      transformAction, // pipeline starts here\n      // Hydrate: skip callbacks called on server to produce initialState (beforeEnter, thunk, etc)\n      // Server: don't allow client-centric callbacks (onEnter, onLeave, beforeLeave)\n      call('beforeLeave', { prev: true }),\n      call('beforeEnter', { runOnServer: true }),\n      saveScroll,\n      enter,\n      changePageTitle({ title: options.title }),\n      call('onLeave', { prev: true }),\n      call('onEnter', { runOnHydrate: true }),\n      call('thunk', { cache: true, runOnServer: true }),\n      restoreScroll,\n      call('onComplete', { runOnServer: true }),\n    ]\n  }\n  const onError = call('onError', { runOnServer: true, runOnHydrate: true })(\n    api,\n  )\n  const nextPromise = options.compose(\n    middlewares,\n    api,\n    true,\n  )\n\n  const middleware = ({ dispatch, getState }: Store) => {\n    const getLocation = (s) => selectLocationState(s || getState() || {})\n    const { shouldTransition, createRequest } = options // middlewares may mutably monkey-patch these in above call to `compose`\n\n    // TODO: Fix these annotations\n    Object.assign(api, { getLocation, dispatch, getState })\n\n    history.listen(dispatch, getLocation) // dispatch actions in response to pops, use redux location state as single source of truth\n\n    return (dispatch: Dispatch) => (action: Object): Promise<any> => {\n      if (!shouldTransition(action, api)) return dispatch(action) // short-circuit and pass through Redux middleware normally\n      if (action.tmp && action.tmp.canceled) return Promise.resolve(action)\n\n      const req = createRequest(action, api, dispatch) // the `Request` arg passed to all middleware\n      const mw = req.route.middleware\n      const next = mw\n        ? options.compose(\n            mw,\n            api,\n            !!req.route.path,\n          )\n        : nextPromise\n\n      return next(req) // start middleware pipeline\n        .catch((error) => {\n          if (options.wallabyErrors) throw error // wallaby UI is linkable if we don't re-throw errors (we'll see errors for the few tests of errors outside of wallaby)\n          req.error = error\n          req.errorType = `${req.action.type}_ERROR`\n          return onError(req)\n        })\n        .then((res) => {\n          const { route, tmp, ctx, clientLoadBusy } = req\n          const isRoutePipeline = route.path && !tmp.canceled && !clientLoadBusy\n          ctx.busy = isRoutePipeline ? false : ctx.busy\n          return res\n        })\n    }\n  }\n\n  return {\n    api,\n    middleware,\n    reducer,\n    firstRoute: (resolveOnEnter = true) => {\n      api.resolveFirstRouteOnEnter = resolveOnEnter\n      return firstAction\n    },\n  }\n}\n"],"file":"createRouter.js"}