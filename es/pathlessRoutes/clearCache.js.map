{"version":3,"sources":["../../src/pathlessRoutes/clearCache.js"],"names":["cache","action","has","env","process","NODE_ENV","Error","payload","invalidator","options","clear"],"mappings":"AAGA,gBAAe,gBAA8C;AAAA,MAA3CA,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,MAAoC,QAApCA,MAAoC;AAAA,MAA5BC,GAA4B,QAA5BA,GAA4B;AAC3D,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;;AAEA,MAAIF,GAAG,KAAK,aAAR,IAAyB,CAACD,GAAG,CAAC,eAAD,CAAjC,EAAoD;AAClD,UAAM,IAAII,KAAJ,CACJ,mFADI,CAAN;AAGD;;AAP0D,wBAS1BL,MAAM,CAACM,OATmB;AAAA,MASnDC,WATmD,mBASnDA,WATmD;AAAA,MAStCC,OATsC,mBAStCA,OATsC;AAW3DT,EAAAA,KAAK,CAACU,KAAN,CAAYF,WAAZ,EAAyBC,OAAzB;AACD,CAZD","sourcesContent":["// @flow\nimport type { ClearCache } from '../flow-types'\n\nexport default ({ cache, action, has }: ClearCache): void => {\n  const env = process.env.NODE_ENV\n\n  if (env === 'development' && !has('pathlessRoute')) {\n    throw new Error(\n      '[rudy] \"pathlessRoute\" middleware is required to use \"clearCache\" action creator.',\n    )\n  }\n\n  const { invalidator, options } = action.payload\n\n  cache.clear(invalidator, options)\n}\n"],"file":"clearCache.js"}