{"version":3,"sources":["../../../../src/middleware/call/utils/shouldCall.js"],"names":["isServer","isHydrate","name","route","req","runOnServer","runOnHydrate","options","allowBoth"],"mappings":"AACA,SAASA,QAAT,QAAyB,0BAAzB;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,gBAAe,UAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,QAAqD;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAClE,MAAI,CAACH,KAAK,CAACD,IAAD,CAAN,IAAgB,CAACE,GAAG,CAACG,OAAJ,CAAYL,IAAZ,CAArB,EAAwC,OAAO,KAAP;AAExC,MAAID,SAAS,CAACG,GAAD,CAAT,IAAkB,CAACE,YAAvB,EAAqC,OAAO,KAAP;AAErC,MAAIN,QAAQ,MAAM,CAACK,WAAnB,EAAgC,OAAO,KAAP;AAEhC,SAAOG,SAAP;AACD,CARD;AAUA,IAAMA,SAAS,GAAG;AAAEL,EAAAA,KAAK,EAAE,IAAT;AAAeI,EAAAA,OAAO,EAAE;AAAxB,CAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// @flow\nimport { isServer } from '@respond-framework/utils'\nimport type { LocationState } from '../../../flow-types'\nimport { isHydrate } from '../../../utils'\n\nexport default (name, route, req, { runOnServer, runOnHydrate }) => {\n  if (!route[name] && !req.options[name]) return false\n\n  if (isHydrate(req) && !runOnHydrate) return false\n\n  if (isServer() && !runOnServer) return false\n\n  return allowBoth\n}\n\nconst allowBoth = { route: true, options: true }\n\n// If for instance, you wanted to allow each route to decide\n// whether to skip options callbacks, here's a simple way to do it:\n//\n// return {\n//   options: !route.skipOpts, // if true, don't make those calls\n//   route: true\n// }\n//\n// You also could choose to automatically trigger option callbacks only as a fallback:\n//\n// return {\n//   options: !route[name],\n//   route: !!route[name]\n// }\n"],"file":"shouldCall.js"}