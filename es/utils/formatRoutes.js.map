{"version":3,"sources":["../../src/utils/formatRoutes.js"],"names":["ADD_ROUTES","CHANGE_BASENAME","CLEAR_CACHE","CONFIRM","CALL_HISTORY","addRoutes","changeBasename","clearCache","confirm","callHistory","input","formatter","isAddRoutes","routes","NOT_FOUND","path","Object","assign","thunk","dispatch","types","keys","forEach","type","route","formatRoute","r"],"mappings":"AACA,SACEA,UADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,OAJF,EAKEC,YALF,QAMO,UANP;AASA,SACEC,SADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,WALF,QAMO,mBANP;AAQA,gBAAe,UACbC,KADa,EAEbC,SAFa,EAIF;AAAA,MADXC,WACW,uEADY,KACZ;AACX,MAAMC,MAAM,GAAGD,WAAW,GAAGF,KAAH,GAAW,EAArC;;AAEA,MAAI,CAACE,WAAL,EAAkB;AAChBC,IAAAA,MAAM,CAACC,SAAP,GAAmBJ,KAAK,CAACI,SAAN,IAAmB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAtC;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAcJ,MAAd,EAAsBH,KAAtB,EAFgB,CAEa;;AAE7BG,IAAAA,MAAM,CAACb,UAAD,CAAN,GAAqBU,KAAK,CAACV,UAAD,CAAL,IAAqB;AACxCkB,MAAAA,KAAK,EAAEb,SADiC;AAExCc,MAAAA,QAAQ,EAAE;AAF8B,KAA1C;AAIAN,IAAAA,MAAM,CAACZ,eAAD,CAAN,GAA0BS,KAAK,CAACT,eAAD,CAAL,IAA0B;AAClDiB,MAAAA,KAAK,EAAEZ,cAD2C;AAElDa,MAAAA,QAAQ,EAAE;AAFwC,KAApD;AAIAN,IAAAA,MAAM,CAACX,WAAD,CAAN,GAAsBQ,KAAK,CAACR,WAAD,CAAL,IAAsB;AAAEgB,MAAAA,KAAK,EAAEX;AAAT,KAA5C;AACAM,IAAAA,MAAM,CAACV,OAAD,CAAN,GAAkBO,KAAK,CAACP,OAAD,CAAL,IAAkB;AAAEe,MAAAA,KAAK,EAAEV,OAAT;AAAkBW,MAAAA,QAAQ,EAAE;AAA5B,KAApC;AACAN,IAAAA,MAAM,CAACT,YAAD,CAAN,GAAuBM,KAAK,CAACN,YAAD,CAAL,IAAuB;AAC5Cc,MAAAA,KAAK,EAAET,WADqC;AAE5CU,MAAAA,QAAQ,EAAE;AAFkC,KAA9C;AAID;;AAED,MAAMC,KAAiB,GAAGJ,MAAM,CAACK,IAAP,CAAYR,MAAZ,CAA1B;AAEAO,EAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,IAAD,EAAwB;AACpC,QAAMC,KAAa,GAAGC,WAAW,CAC/BZ,MAAM,CAACU,IAAD,CADyB,EAE/BA,IAF+B,EAG/BV,MAH+B,EAI/BF,SAJ+B,EAK/BC,WAL+B,CAAjC;AAQAY,IAAAA,KAAK,CAACD,IAAN,GAAaA,IAAb;AACAV,IAAAA,MAAM,CAACU,IAAD,CAAN,GAAeC,KAAf;AACD,GAXD;AAaA,SAAOX,MAAP;AACD,CA3CD;AA6CA,OAAO,IAAMY,WAAW,GAAG,SAAdA,WAAc,CACzBC,CADyB,EAEzBH,IAFyB,EAGzBV,MAHyB,EAIzBF,SAJyB,EAMV;AAAA,MADfC,WACe,uEADQ,KACR;AACf,MAAMY,KAAK,GAAG,OAAOE,CAAP,KAAa,QAAb,GAAwB;AAAEX,IAAAA,IAAI,EAAEW;AAAR,GAAxB,GAAsCA,CAApD;;AAEA,MAAIf,SAAJ,EAAe;AACb,WAAOA,SAAS,CAACa,KAAD,EAAQD,IAAR,EAAcV,MAAd,EAAsBD,WAAtB,CAAhB;AACD;;AAED,MAAI,OAAOY,KAAP,KAAiB,UAArB,EAAiC;AAC/B,WAAO;AAAEN,MAAAA,KAAK,EAAEM;AAAT,KAAP;AACD;;AAED,SAAOA,KAAP;AACD,CAlBM","sourcesContent":["// @flow\nimport {\n  ADD_ROUTES,\n  CHANGE_BASENAME,\n  CLEAR_CACHE,\n  CONFIRM,\n  CALL_HISTORY,\n} from '../types'\nimport type { Routes, RoutesInput, RouteInput, RouteNames } from '../flow-types'\n\nimport {\n  addRoutes,\n  changeBasename,\n  clearCache,\n  confirm,\n  callHistory,\n} from '../pathlessRoutes'\n\nexport default (\n  input: RoutesInput,\n  formatter: ?Function,\n  isAddRoutes: boolean = false,\n): Routes => {\n  const routes = isAddRoutes ? input : {}\n\n  if (!isAddRoutes) {\n    routes.NOT_FOUND = input.NOT_FOUND || { path: '/not-found' }\n    Object.assign(routes, input) // insure '/not-found' matches over '/:param?' -- yes, browsers respect order assigned for non-numeric keys\n\n    routes[ADD_ROUTES] = input[ADD_ROUTES] || {\n      thunk: addRoutes,\n      dispatch: false,\n    }\n    routes[CHANGE_BASENAME] = input[CHANGE_BASENAME] || {\n      thunk: changeBasename,\n      dispatch: false,\n    }\n    routes[CLEAR_CACHE] = input[CLEAR_CACHE] || { thunk: clearCache }\n    routes[CONFIRM] = input[CONFIRM] || { thunk: confirm, dispatch: false }\n    routes[CALL_HISTORY] = input[CALL_HISTORY] || {\n      thunk: callHistory,\n      dispatch: false,\n    }\n  }\n\n  const types: RouteNames = Object.keys(routes)\n\n  types.forEach((type: string): void => {\n    const route: Object = formatRoute(\n      routes[type],\n      type,\n      routes,\n      formatter,\n      isAddRoutes,\n    )\n\n    route.type = type\n    routes[type] = route\n  })\n\n  return routes\n}\n\nexport const formatRoute = (\n  r: RouteInput,\n  type: string,\n  routes: Routes,\n  formatter: ?Function,\n  isAddRoutes: boolean = false,\n): RouteInput => {\n  const route = typeof r === 'string' ? { path: r } : r\n\n  if (formatter) {\n    return formatter(route, type, routes, isAddRoutes)\n  }\n\n  if (typeof route === 'function') {\n    return { thunk: route }\n  }\n\n  return route\n}\n"],"file":"formatRoutes.js"}