{"version":3,"sources":["../../src/actions/history.js"],"names":["push","path","state","type","CALL_HISTORY","payload","method","args","replace","jump","delta","byIndex","n","reset","entries","index","back","next","set","action","setParams","params","setQuery","query","setState","setHash","hash","setBasename","basename"],"mappings":"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","sourcesContent":["// @flow\nimport { CALL_HISTORY } from '../types'\nimport type { HistoryRouteAction } from '../flow-types'\n\nexport const push = (path: string, state: ?Object): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'push',\n    args: [path, state],\n  },\n})\n\nexport const replace = (path: string, state: ?Object): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'replace',\n    args: [path, state],\n  },\n})\n\nexport const jump = (\n  delta: number | string,\n  byIndex: ?boolean,\n  n: ?number,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'jump',\n    args: [delta, byIndex, n],\n  },\n})\n\nexport const reset = (\n  entries: Array<string | Object>,\n  index: ?number,\n  n: ?number,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'reset',\n    args: [entries, index, n],\n  },\n})\n\nexport const back = (): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'back',\n    args: [],\n  },\n})\n\nexport const next = (): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'next',\n    args: [],\n  },\n})\n\nexport const set = (\n  action: Object,\n  n: ?(number | string),\n  byIndex: ?boolean,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'set',\n    args: [action, n, byIndex],\n  },\n})\n\nexport const setParams = (\n  params: Object,\n  n: ?(number | string),\n  byIndex: ?boolean,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'set',\n    args: [{ params }, n, byIndex],\n  },\n})\n\nexport const setQuery = (\n  query: Object,\n  n: ?(number | string),\n  byIndex: ?boolean,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'set',\n    args: [{ query }, n, byIndex],\n  },\n})\n\nexport const setState = (\n  state: Object,\n  n: ?(number | string),\n  byIndex: ?boolean,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'set',\n    args: [{ state }, n, byIndex],\n  },\n})\n\nexport const setHash = (\n  hash: Object,\n  n: ?(number | string),\n  byIndex: ?boolean,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'set',\n    args: [{ hash }, n, byIndex],\n  },\n})\n\nexport const setBasename = (\n  basename: Object,\n  n: ?(number | string),\n  byIndex: ?boolean,\n): HistoryRouteAction => ({\n  type: CALL_HISTORY,\n  payload: {\n    method: 'set',\n    args: [{ basename }, n, byIndex],\n  },\n})\n\n// NOTE: see `src/utils/formatRoutes.js` for implementation of corresponding pathlessRoute\n"],"file":"history.js"}