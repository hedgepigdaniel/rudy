{"version":3,"sources":["../../src/utils/toAction.js"],"names":["api","entry","st","k","Array","isArray","url","state","key","location"],"mappings":";;;;;;;AACA;;;;;;;;;;;;eAQe,kBACbA,GADa,EAMbC,KANa,EAObC,EAPa,EAQbC,CARa,EASK;AAClB,MAAIC,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;AACxB;AADwB,gCAEEA,KAFF;AAAA,QAEjBK,GAFiB;AAAA,QAEZC,KAFY;AAAA,QAELC,GAFK;;AAGxB,WAAO,wBAAYR,GAAZ,EAAiBM,GAAjB,EAAsBC,KAAtB,EAA6BC,GAA7B,CAAP;AACD;;AACD,MAAI,QAAOP,KAAP,MAAiB,QAArB,EAA+B;AAC7B;AACA,QAAMO,IAAG,GAAGP,KAAK,CAACQ,QAAN,IAAkBR,KAAK,CAACQ,QAAN,CAAeD,GAA7C,CAF6B,CAEoB;;;AAFpB,uBAGN,wBAAYP,KAAZ,EAAmBD,GAAnB,CAHM;AAAA,QAGrBM,IAHqB,gBAGrBA,GAHqB;AAAA,QAGhBC,MAHgB,gBAGhBA,KAHgB;;AAI7B,WAAO,wBAAYP,GAAZ,EAAiBM,IAAjB,EAAsBC,MAAtB,EAA6BC,IAA7B,CAAP;AACD;;AACD,SAAO,wBAAYR,GAAZ,EAAiBC,KAAjB,EAAwBC,EAAxB,EAA4BC,CAA5B,CAAP,CAZkB,CAYoB;AACvC,C","sourcesContent":["// @flow\nimport { actionToUrl, urlToAction } from './index'\nimport type { Options, Routes, LocationState } from '../flow-types'\n// This will take anything you throw at it (a url string, action, or array: [url, state, key?])\n// and convert it to a complete Rudy FSRA (\"flux standard routing action\").\n\n// Standard Rudy practice is to convert incoming actions to their full URL form (url + state)\n// and then convert that to a FSRA. THIS DOES BOTH STEPS IN ONE WHEN NECESSSARY (i.e. for actions).\n\nexport default (\n  api: {\n    routes: Routes,\n    options: Options,\n  },\n  // TODO: make better annotations here\n  entry: string | Object,\n  st: ?Object,\n  k: ?Object,\n): LocationState => {\n  if (Array.isArray(entry)) {\n    // entry as array of [url, state, key?]\n    const [url, state, key] = entry\n    return urlToAction(api, url, state, key)\n  }\n  if (typeof entry === 'object') {\n    // entry as action object\n    const key = entry.location && entry.location.key // preserve existing key if existing FSRA\n    const { url, state } = actionToUrl(entry, api)\n    return urlToAction(api, url, state, key)\n  }\n  return urlToAction(api, entry, st, k) // entry as url string\n}\n"],"file":"toAction.js"}