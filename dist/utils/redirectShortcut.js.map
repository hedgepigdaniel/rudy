{"version":3,"sources":["../../src/utils/redirectShortcut.js"],"names":["route","routes","action","dispatch","t","redirect","scenicType","scene","type"],"mappings":";;;;;;;AAEA;;;;;;;;eAEe,wBAUT;AAAA,MATJA,KASI,QATJA,KASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AACJ,MAAMC,CAAC,GAAGJ,KAAK,CAACK,QAAhB,CADI,CAEJ;;AACA,MAAMC,UAAU,aAAMN,KAAK,CAACO,KAAZ,cAAqBH,CAArB,CAAhB;AACA,MAAMI,IAA8B,GAAGP,MAAM,CAACK,UAAD,CAAN,GAAqBA,UAArB,GAAkCF,CAAzE,CAJI,CAMJ;;AACA,SAAOD,QAAQ,CAAC,yCAAcD,MAAd;AAAsBM,IAAAA,IAAI,EAAJA;AAAtB,MAA8B,GAA9B,CAAD,CAAf;AACD,C","sourcesContent":["// @flow\nimport type { Dispatch, NavigationToAction, Route, Routes } from '../flow-types'\nimport { redirect } from '../actions'\n\nexport default ({\n  route,\n  routes,\n  action,\n  dispatch,\n}: {\n  route: Route,\n  routes: Routes,\n  action: NavigationToAction,\n  dispatch: Dispatch,\n}) => {\n  const t = route.redirect\n  // $FlowFixMe\n  const scenicType = `${route.scene}/${t}`\n  const type: string | Function | void = routes[scenicType] ? scenicType : t\n\n  // $FlowFixMe\n  return dispatch(redirect({ ...action, type }, 301))\n}\n"],"file":"redirectShortcut.js"}