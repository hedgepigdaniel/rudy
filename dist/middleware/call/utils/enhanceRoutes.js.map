{"version":3,"sources":["../../../../src/middleware/call/utils/enhanceRoutes.js"],"names":["name","routes","options","type","route","cb","callback","findCallback","Array","isArray","callbacks","pipeline","map","req","next","prom","Promise","resolve","then","complete","killOnRedirect","path","compose","inheritedRoute","scene","inherit","res"],"mappings":";;;;;;;eAAe,kBAACA,IAAD,EAAOC,MAAP,EAAeC,OAAf,EAA2B;AACxC,OAAK,IAAMC,IAAX,IAAmBF,MAAnB,EAA2B;AACzB,QAAMG,KAAK,GAAGH,MAAM,CAACE,IAAD,CAApB;AACA,QAAME,EAAE,GAAGD,KAAK,CAACJ,IAAD,CAAhB;AACA,QAAMM,QAAQ,GAAGC,YAAY,CAACP,IAAD,EAAOC,MAAP,EAAeI,EAAf,EAAmBD,KAAnB,EAA0BF,OAA1B,CAA7B;AACA,QAAII,QAAJ,EAAcF,KAAK,CAACJ,IAAD,CAAL,GAAcM,QAAd;AACf;;AAED,SAAOL,MAAP;AACD,C;;;;AAED,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACP,IAAD,EAAOC,MAAP,EAAeK,QAAf,EAAyBF,KAAzB,EAAgCF,OAAhC,EAA4C;AAC/D,MAAI,OAAOI,QAAP,KAAoB,UAAxB,EAAoC;AAClC,WAAOA,QAAP;AACD;;AACD,MAAIE,KAAK,CAACC,OAAN,CAAcH,QAAd,CAAJ,EAA6B;AAC3B,QAAMI,SAAS,GAAGJ,QAAlB;AACA,QAAMK,QAAQ,GAAGD,SAAS,CAACE,GAAV,CAAc,UAACP,EAAD;AAAA,aAAQ,UAACQ,GAAD,EAAMC,IAAN,EAAe;AACpDT,QAAAA,EAAE,GAAGE,YAAY,CAACP,IAAD,EAAOC,MAAP,EAAeI,EAAf,EAAmBD,KAAnB,CAAjB;AAEA,YAAMW,IAAI,GAAGC,OAAO,CAACC,OAAR,CAAgBZ,EAAE,CAACQ,GAAD,CAAlB,CAAb;AACA,eAAOE,IAAI,CAACG,IAAL,CAAUC,QAAQ,CAACL,IAAD,CAAlB,CAAP;AACD,OAL8B;AAAA,KAAd,CAAjB;AAOA,QAAMM,cAAc,GAAG,CAAC,CAAChB,KAAK,CAACiB,IAA/B;AACA,WAAOnB,OAAO,CAACoB,OAAR,CACLX,QADK,EAEL,IAFK,EAGLS,cAHK,CAAP;AAKD;;AACD,MAAI,OAAOd,QAAP,KAAoB,QAAxB,EAAkC;AAChC,QAAMH,IAAI,GAAGG,QAAb;AACA,QAAMiB,cAAc,GAAGtB,MAAM,WAAIG,KAAK,CAACoB,KAAV,cAAmBrB,IAAnB,EAAN,IAAoCF,MAAM,CAACE,IAAD,CAAjE;AACA,QAAME,EAAE,GAAGkB,cAAc,CAACvB,IAAD,CAAzB;AACA,WAAOO,YAAY,CAACP,IAAD,EAAOC,MAAP,EAAeI,EAAf,EAAmBkB,cAAnB,CAAnB;AACD;;AACD,MAAI,OAAOnB,KAAK,CAACqB,OAAb,KAAyB,QAA7B,EAAuC;AACrC,QAAMtB,KAAI,GAAGC,KAAK,CAACqB,OAAnB;;AACA,QAAMF,eAAc,GAAGtB,MAAM,WAAIG,KAAK,CAACoB,KAAV,cAAmBrB,KAAnB,EAAN,IAAoCF,MAAM,CAACE,KAAD,CAAjE;;AACA,QAAME,GAAE,GAAGkB,eAAc,CAACvB,IAAD,CAAzB;AACA,WAAOO,YAAY,CAACP,IAAD,EAAOC,MAAP,EAAeI,GAAf,EAAmBkB,eAAnB,CAAnB;AACD;AACF,CAhCD;;AAkCA,IAAMJ,QAAQ,GAAG,SAAXA,QAAW,CAACL,IAAD;AAAA,SAAU,UAACY,GAAD;AAAA,WAASZ,IAAI,GAAGI,IAAP,CAAY;AAAA,aAAMQ,GAAN;AAAA,KAAZ,CAAT;AAAA,GAAV;AAAA,CAAjB","sourcesContent":["export default (name, routes, options) => {\n  for (const type in routes) {\n    const route = routes[type]\n    const cb = route[name]\n    const callback = findCallback(name, routes, cb, route, options)\n    if (callback) route[name] = callback\n  }\n\n  return routes\n}\n\nconst findCallback = (name, routes, callback, route, options) => {\n  if (typeof callback === 'function') {\n    return callback\n  }\n  if (Array.isArray(callback)) {\n    const callbacks = callback\n    const pipeline = callbacks.map((cb) => (req, next) => {\n      cb = findCallback(name, routes, cb, route)\n\n      const prom = Promise.resolve(cb(req))\n      return prom.then(complete(next))\n    })\n\n    const killOnRedirect = !!route.path\n    return options.compose(\n      pipeline,\n      null,\n      killOnRedirect,\n    )\n  }\n  if (typeof callback === 'string') {\n    const type = callback\n    const inheritedRoute = routes[`${route.scene}/${type}`] || routes[type]\n    const cb = inheritedRoute[name]\n    return findCallback(name, routes, cb, inheritedRoute)\n  }\n  if (typeof route.inherit === 'string') {\n    const type = route.inherit\n    const inheritedRoute = routes[`${route.scene}/${type}`] || routes[type]\n    const cb = inheritedRoute[name]\n    return findCallback(name, routes, cb, inheritedRoute)\n  }\n}\n\nconst complete = (next) => (res) => next().then(() => res)\n"],"file":"enhanceRoutes.js"}