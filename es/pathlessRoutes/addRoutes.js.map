{"version":3,"sources":["../../src/pathlessRoutes/addRoutes.js"],"names":["enhanceRoutes","formatRoutes","req","action","options","allRoutes","routes","has","env","process","NODE_ENV","Error","payload","formatRoute","formatter","newRoutes","callbacks","forEach","name","Object","assign","routesAdded","keys","length","commitDispatch"],"mappings":"AACA,SAASA,aAAT,QAA8B,0BAA9B,C,CAAyD;;AACzD,SAASC,YAAT,QAA6B,UAA7B;AAGA,gBAAe,UAACC,GAAD,EAA0B;AAAA,MAC/BC,MAD+B,GACaD,GADb,CAC/BC,MAD+B;AAAA,MACvBC,OADuB,GACaF,GADb,CACvBE,OADuB;AAAA,MACNC,SADM,GACaH,GADb,CACdI,MADc;AAAA,MACKC,GADL,GACaL,GADb,CACKK,GADL;AAGvC,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;;AAEA,MAAIF,GAAG,KAAK,aAAR,IAAyB,CAACD,GAAG,CAAC,eAAD,CAAjC,EAAoD;AAClD,UAAM,IAAII,KAAJ,CACJ,kFADI,CAAN;AAGD;;AATsC,wBAWPR,MAAM,CAACS,OAXA;AAAA,MAW/BN,MAX+B,mBAW/BA,MAX+B;AAAA,MAWvBO,WAXuB,mBAWvBA,WAXuB;AAYvC,MAAMC,SAAS,GAAGD,WAAW,IAAIT,OAAO,CAACS,WAAzC;AACA,MAAME,SAAS,GAAGd,YAAY,CAACK,MAAD,EAASQ,SAAT,EAAoB,IAApB,CAA9B;AACA,MAAME,SAAS,GAAGZ,OAAO,CAACY,SAAR,IAAqB,EAAvC;AAEAA,EAAAA,SAAS,CAACC,OAAV,CAAkB,UAACC,IAAD;AAAA,WAAUlB,aAAa,CAACkB,IAAD,EAAOH,SAAP,EAAkBX,OAAlB,CAAvB;AAAA,GAAlB;AAEAe,EAAAA,MAAM,CAACC,MAAP,CAAcf,SAAd,EAAyBU,SAAzB;AAEAZ,EAAAA,MAAM,CAACS,OAAP,CAAeN,MAAf,GAAwBS,SAAxB;AACAZ,EAAAA,MAAM,CAACS,OAAP,CAAeS,WAAf,GAA6BF,MAAM,CAACG,IAAP,CAAYhB,MAAZ,EAAoBiB,MAAjD,CArBuC,CAqBiB;;AAExDrB,EAAAA,GAAG,CAACsB,cAAJ,CAAmBrB,MAAnB;AACD,CAxBD","sourcesContent":["// @flow\nimport { enhanceRoutes } from '../middleware/call/utils' // unfortunate coupling (to potentially optional middleware)\nimport { formatRoutes } from '../utils'\nimport type { AddRoutes } from '../flow-types'\n\nexport default (req: AddRoutes): void => {\n  const { action, options, routes: allRoutes, has } = req\n\n  const env = process.env.NODE_ENV\n\n  if (env === 'development' && !has('pathlessRoute')) {\n    throw new Error(\n      '[rudy] \"pathlessRoute\" middleware is required to use \"addRoutes\" action creator.',\n    )\n  }\n\n  const { routes, formatRoute } = action.payload\n  const formatter = formatRoute || options.formatRoute\n  const newRoutes = formatRoutes(routes, formatter, true)\n  const callbacks = options.callbacks || []\n\n  callbacks.forEach((name) => enhanceRoutes(name, newRoutes, options))\n\n  Object.assign(allRoutes, newRoutes)\n\n  action.payload.routes = newRoutes\n  action.payload.routesAdded = Object.keys(routes).length // we need something to triggering updating of Link components when routes added\n\n  req.commitDispatch(action)\n}\n"],"file":"addRoutes.js"}