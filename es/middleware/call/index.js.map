{"version":3,"sources":["../../../src/middleware/call/index.js"],"names":["enhanceRoutes","shouldCall","createCache","autoDispatch","noOp","name","config","api","cache","prev","skipOpts","start","routes","options","callbacks","push","req","next","route","prevRoute","isCached","calls","r","o","action","type","commitDispatch","_start","Promise","all","then","isFalse","last","tmp","committed","block","ctx","doubleDispatchRedirect","res","undefined","handleDoubleDispatchRedirect","_dispatched","cacheAction"],"mappings":"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","sourcesContent":["import { enhanceRoutes, shouldCall, createCache, autoDispatch } from './utils'\nimport { noOp } from '../../utils'\n\nexport default (name, config = {}) => (api) => {\n  const {\n    cache = false,\n    prev = false,\n    skipOpts = false,\n    start = false,\n  } = config\n\n  enhanceRoutes(name, api.routes, api.options)\n\n  api.options.callbacks = api.options.callbacks || []\n  api.options.callbacks.push(name)\n  api.options.shouldCall = api.options.shouldCall || shouldCall\n\n  if (cache) {\n    api.cache = createCache(api, name, config)\n  }\n\n  return (req, next = noOp) => {\n    const route = prev ? req.prevRoute : req.route\n\n    const isCached = cache && api.cache.isCached(name, route, req)\n    if (isCached) return next()\n\n    const calls = req.options.shouldCall(name, route, req, config)\n    if (!calls) return next()\n\n    const r = (calls.route && route[name]) || noOp\n    const o = (calls.options && !skipOpts && req.options[name]) || noOp\n\n    if (start) {\n      const action = { ...req.action, type: `${req.type}_START` }\n      req.commitDispatch(action)\n      req._start = true\n    }\n\n    return Promise.all([\n      autoDispatch(req, r, route, name),\n      autoDispatch(req, o, route, name, true),\n    ]).then(([r, o]) => {\n      req._start = false\n\n      if (isFalse(r, o)) {\n        // set the current callback name and whether its on the previous route (beforeLeave) or current\n        // so that `req.confirm()` can temporarily delete it and pass through the pipeline successfully\n        // in a confirmation modal or similar\n        req.last = { name, prev }\n\n        if (!req.tmp.committed) {\n          req.block() // update state.blocked === actionBlockedFrom\n        }\n\n        return false\n      }\n\n      if (req.ctx.doubleDispatchRedirect) {\n        // dispatches to current location during redirects blocked, see `transformAction/index.js`\n        const res = r !== undefined ? r : o\n        return req.handleDoubleDispatchRedirect(res)\n      }\n\n      // `_dispatched` is a flag used to find whether actions were already dispatched in order\n      // to determine whether to automatically dispatch it. The goal is not to dispatch twice.\n      //\n      // We delete these keys so they don't show up in responses returned from `store.dispatch`\n      // NOTE: they are only applied to responses, which often are actions, but only AFTER they\n      // are dispatched. This way reducers never see this key. See `core/createRequest.js`\n      if (r) delete r._dispatched\n      if (o) delete o._dispatched\n\n      if (cache) req.cache.cacheAction(name, req.action)\n\n      const res = r !== undefined ? r : o\n      return next().then(() => res)\n    })\n  }\n}\n\nconst isFalse = (r, o) => r === false || o === false\n"],"file":"index.js"}